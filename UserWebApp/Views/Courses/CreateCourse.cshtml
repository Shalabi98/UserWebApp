@model UserWebApp.Models.Course
@using UserWebApp.Models;
@{
    Layout = "_Layout";
}
<style>
    .form-group.required .control-label:after {
        content: "*";
        color: red;
    }
</style>
<h5>Course Form</h5>
<div class="row">
    <div class="col-md-6">
        <div class="panel-heading">
            Create a New Course Record
        </div>
        <hr />
        <form asp-controller="Courses" asp-action="CreateCourse" >
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="CourseId" />
            @if (@ViewBag.CourseMessage != null)
             {
                <div class="alert alert-info alert-dismissible" role="alert">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <strong>@ViewBag.CourseMessage</strong>
                </div>
             }
            <div class="form-group required">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group required">
                <label asp-for="Code" class="control-label"></label>
                <input asp-for="Code" class="form-control" />
                <span asp-validation-for="Code" class="text-danger"></span>
            </div>
            <div class="form-group required">
                <label asp-for="CreditHours" class="control-label"></label>
                <input asp-for="CreditHours" class="form-control" />
                <span asp-validation-for="CreditHours" class="text-danger"></span>
            </div>
            <div class="form-group required">
                <label asp-for="Semester" class="control-label"></label>
                <input asp-for="Semester" class="form-control" />
                <span asp-validation-for="Semester" class="text-danger"></span>
            </div>
            <div class="form-group required">
                <label asp-for="Location" class="control-label"></label>
                <input asp-for="Location" class="form-control" />
                <span asp-validation-for="Location" class="text-danger"></span>
            </div>
            <div class="form-row">
                <div class="form-group col-md-6">
                    <button type="submit" class="btn btn-outline-success btn-block"><i class="fas fa-database"></i>&nbsp;Create Record</button>
                </div>
                <div class="form-group col-md-6">
                    <a asp-controller="Courses" asp-action="Index" class="btn btn-outline-info btn-block"><i class="fa fa-table"></i> Course Records </a>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script>
    //// build SignalR connection
    //const connection = new signalR.HubConnectionBuilder()
    //    .withUrl("/chatHub")
    //    .build();

    //function updateNotificationCount() {
    //    var count = 0;
    //    count = parseInt($('span.count').html()) || 0;
    //    count++;
    //    $('span.count').html(count);
    //}

    //connection.start().catch(err => console.error(err.toString()));

    //function invokeNotification(e) {
    //    connection.invoke("PostNotification").catch(err => console.error(err.toString()));
    //    e.preventDefault();
    //}

    //// to receive a notification
    //connection.on("Notification", () => {
    //    updateNotificationCount();
    //});

    //// to send a notification
    //document.getElementById("createBtn").addEventListener('click', invokeNotification);
</script>
}